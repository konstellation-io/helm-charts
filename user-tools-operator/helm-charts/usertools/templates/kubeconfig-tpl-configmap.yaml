apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeconfig-tpl-configmap
  labels:
    app: kubeconfig-tpl-configmap
data:

  generate-kubeconfig.sh: |+
    #!/bin/sh
    SECRETNAME={{ .Values.usernameSlug }}-kubeconfig
    EXTERNAL_URL={{ .Values.kubeconfig.externalServerUrl }}
    INTERNAL_URL=https://kubernetes.default.svc
    CACERT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt | base64 | tr -d '\n')
    TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)

    replace_template() {
      FILE=$1
      SERVER=$2

      cp /kubeconfig.tpl ${FILE}
      sed -i "s|{CACERT}|${CACERT}|g" ${FILE}
      sed -i "s|{TOKEN}|${TOKEN}|g" ${FILE}
      sed -i "s|{SERVER}|${SERVER}|g" ${FILE}
    }

    replace_template /home/coder/kubeconfig ${INTERNAL_URL}
    replace_template /tmp/kubeconfig ${EXTERNAL_URL}

    kubectl delete secret ${SECRETNAME} --ignore-not-found
    kubectl create secret generic ${SECRETNAME} \
      --save-config \
      --dry-run=client \
      --from-file=/tmp/kubeconfig \
      -o yaml | kubectl apply -n {{ .Release.Namespace }} -f -

  kubeconfig.tpl: |+
    apiVersion: v1
    clusters:
    - cluster:
        certificate-authority-data: {CACERT}
        server: {SERVER}
      name: konstellation
    contexts:
    - context:
        cluster: konstellation
        user: coder
      name: default
    current-context: default
    kind: Config
    preferences: {}
    users:
    - name: coder
      user:
        token: {TOKEN}
