apiVersion: v1
kind: ConfigMap
metadata:
  name: kdl-mongo-init-script
  labels:

data:
  init-app-admin.js: |
    conn = new Mongo();
    db = conn.getDB("kdl");
    try {
        db.createRole({
        role: "readWriteMinusDropRole",
        privileges: [
        {
            resource: { db: "kdl", collection: ""},
            actions: [ "collStats", "dbHash", "dbStats", "find", "killCursors", "listIndexes", "listCollections", "convertToCapped", "createCollection", "createIndex", "dropIndex", "insert", "remove", "renameCollectionSameDB", "update"]} ],
            roles: []
        }
        );
    } catch (e) {
        print("Role for readWriteMinusDropRole for 'kdl' already exists")
    }

    try {
        db.createUser({user: "{{ .Values.mongodb.auth.adminUser }}", pwd: "{{ .Values.mongodb.auth.adminPassword }}", roles: [{role: 'readWriteMinusDropRole', db: "kdl"}]})
    } catch (e) {
        print("User {{ .Values.mongodb.auth.adminUser }} admin for 'kdl' database already exists")
    }
    db.users.insertOne(
       { 
        "username" : "{{ index .Values "science-toolkit" "gitea" "admin" "username" }}",
        "email" : "{{ index .Values "science-toolkit" "gitea" "admin" "email" }}",
        "access_level" : "ADMIN"
       }
    )
