# {{ template "chart.name" . }}

{{ template "chart.description" . }}

## Description

`konstellation-base` Helm chart is designed to facilitate the deployment of applications that lack their own Helm charts or have deprecated ones. It also serves as a foundation for deploying custom-developed applications.

* **Replica management**: configure the number of replicas for your service to ensure scalability and reliability.
* **Image configuration**: specify repository, tag and pull policy to control the application's container image.
* **Service account management**: option to create and configure a Kubernetes `serviceaccount`, including setting `annotations` and specifying whether to automatically mount api credentials.
* **Environment variables**: define environment variables directly or source them from existing Kubernetes `Secrets` or `ConfigMaps`.
* **Probes and lifecycle hooks**: set up `liveness`, `readiness` and `startup probes` to monitor the application's health and define lifecycle hooks for graceful startup and shutdown processes.
* **Resource management**: allocate `cpu` and `memory` resources, set up `autoscaling` based on utilization metrics and define `pod disruption budgets` to maintain application availability during maintenance events.
* **Storage configuration**: manage persistent storage needs by configuring `PVC`, specifying access modes, storage classes and other relevant parameters.
* **Networking and exposure**: configure Kubernetes services to expose your application, with options for service types like `ClusterIP`, `NodePort` or `LoadBalancer`. Additionally, set up `Ingress` resources to manage external access to the application.
* **Security contexts**: define security contexts at both the pod and container levels to enforce security policies, such as running containers as non-root users or setting read-only root filesystems.
* **Node scheduling**: control pod placement using `node selectors`, `tolerations`, `affinities` and `topology spread constraints` to optimize resource utilization and maintain high availability.

{{ template "chart.maintainersSection" . }}

## Prerequisites

* Helm 3+
* Kubernetes 1.24+

{{ template "chart.requirementsSection" . }}

## Add repository

```console
helm repo add konstellation-io https://charts.konstellation.io
helm repo update
```

## Install Helm chart (repository mode)

```console
helm install [RELEASE_NAME] konstellation-io/{{ template "chart.name" . }}
```

This install all the Kubernetes components associated with the chart and creates the release.

_See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._

## Uninstall Helm chart

```console
helm uninstall [RELEASE_NAME]
```

This removes all the Kubernetes components associated with the chart and deletes the release.

_See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._

## Configuration

See [Customizing the chart before installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with comments:

```console
helm show values konstellation-io/{{ template "chart.name" . }}
```

## Examples

Go to [examples](./examples) directory to see some examples of how to use this chart.

```console
# local chart
helm template test . -f examples/XX-example.yaml

# remote chart
helm template test konstellation-io/konstellation-base -f examples/XX-example.yaml
```

{{ template "chart.valuesSection" . }}
